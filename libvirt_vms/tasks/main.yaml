---
- name: Clone VM image from golden image
  become: true
  delegate_to: "{{ hypervisor }}"
  command: |
    /usr/bin/qemu-img create \
    -F qcow2 -f qcow2 \
    -b {{ golden_image_file }} \
    '{{ vm_image_file }}' \
    {{ vm_image_size }}
  args:
    creates: "{{ vm_image_file }}"

- name: Create config directory
  delegate_to: "{{ hypervisor }}"
  become: true
  file:
    path: /tmp/{{ inventory_hostname }}_config
    state: directory
    mode: '0644'

- name: Write user-data
  delegate_to: "{{ hypervisor }}"
  become: true
  copy:
    content: ""
    dest: /tmp/{{ inventory_hostname }}_config/user-data
    mode: '0644'
  notify: regenerate iso

- name: Write meta-data
  delegate_to: "{{ hypervisor }}"
  become: true
  copy:
    content: |
      instance-id: '{{ uuid }}'
      hostname: '{{ inventory_hostname }}'
      local-hostname: '{{ inventory_hostname }}'
      public-keys:
        - |
          {{ hostvars.localhost.ssh_key.public_key }}
    dest: /tmp/{{ inventory_hostname }}_config/meta-data
    mode: '0644'
  notify: regenerate iso

- name: Force update
  meta: flush_handlers

- name: Define libvirt domain
  delegate_to: "{{ hypervisor }}"
  virt:
    command: define
    xml: '{{ lookup("template", "domain.xml.j2") }}'
  tags: [define_vm]
- name: start domain
  delegate_to: "{{ hypervisor }}"
  virt:
    command: define
    name: "{{ inventory_hostname }}"
    state: running
    autostart: true
